<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="Column1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAYCAYAAAB0kZQKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAARJJREFUSEvN1EsKwjAUheGCCCKCCOJaFR8o6kBwLBRcjYhbsO0CuoC+28mVO0iM
        kKTX1MYGfpyZjxOoAx04HHE8na0mntYRt/tD+iueD0QYhlbSIqqqaqWyLHlFUXy/BP6JM3+SqwOQEBf3
        yhMRs0MA030Ak10A460Po40Pw7UPg5UH/aUHvcUb4bqusjzPzZegAMQlZAsgoBGCAmAI2QIsEkL1HBQA
        plsAy7LMfAkKAMPLZQuwGiEoAEy3AKsWoXoOCgDDy2ULsNI0NV+CAsB0CyCgEYICwPBi2QIsEkL1HNR0
        C2BJkpgvQU22hAiwgtAtYB2hAsRxbIbAKF9CCsAY8UtAFEV6hM3EwxH/PB1AALwArDJIUMwx8TYAAAAA
        SUVORK5CYII=
</value>
  </data>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>